@model AgendamentoMedico.Presentation.Models.Account.LoginViewModel
@{
    ViewData["Title"] = "Entrar";
    Layout = "~/Views/Shared/_AuthLayout.cshtml";
}

<div class="auth-container">
    <div class="auth-card">
        <div class="auth-header">
            <h2 class="auth-title">
                <i class="fas fa-user-md me-2"></i>
                Bem-vindo de volta
            </h2>
            <p class="auth-subtitle">Entre com suas credenciais para acessar o sistema</p>
        </div>

        <form asp-action="Login" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="auth-form">
            <div asp-validation-summary="All" class="text-danger validation-summary"></div>

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check-circle me-2"></i>
                    @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <div class="mb-3">
                <label asp-for="Email" class="form-label">
                    <i class="fas fa-envelope me-1"></i>
                    @Html.DisplayNameFor(m => m.Email)
                </label>
                <input asp-for="Email" class="form-control form-control-lg" placeholder="seu@email.com"
                    autocomplete="email" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Password" class="form-label">
                    <i class="fas fa-lock me-1"></i>
                    @Html.DisplayNameFor(m => m.Password)
                </label>
                <div class="input-group">
                    <input asp-for="Password" class="form-control form-control-lg" placeholder="Digite sua senha"
                        autocomplete="current-password" />
                    <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                        <i class="fas fa-eye"></i>
                    </button>
                </div>
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>

            <div class="mb-3 form-check">
                <input asp-for="RememberMe" class="form-check-input" />
                <label asp-for="RememberMe" class="form-check-label">
                    @Html.DisplayNameFor(m => m.RememberMe)
                </label>
            </div>

            <div class="d-grid">
                <button type="submit" class="btn btn-primary btn-lg" id="loginBtn">
                    <span class="btn-text">
                        <i class="fas fa-sign-in-alt me-2"></i>
                        Entrar
                    </span>
                    <span class="btn-loading d-none">
                        <span class="spinner-border spinner-border-sm me-2"></span>
                        Entrando...
                    </span>
                </button>
            </div>
        </form>

        <div class="auth-footer">
            <div class="text-center">
                <p class="mb-0">NÃ£o tem uma conta?</p>
                <a asp-action="Register" class="btn btn-link">
                    <i class="fas fa-user-plus me-1"></i>
                    Solicitar acesso
                </a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        // Toggle password visibility
        document.getElementById('togglePassword').addEventListener('click', function () {
            const passwordInput = document.getElementById('Password');
            const icon = this.querySelector('i');

            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                icon.classList.replace('fa-eye', 'fa-eye-slash');
            } else {
                passwordInput.type = 'password';
                icon.classList.replace('fa-eye-slash', 'fa-eye');
            }
        });

        // Loading state for login button
        document.querySelector('.auth-form').addEventListener('submit', function () {
            const btn = document.getElementById('loginBtn');
            const btnText = btn.querySelector('.btn-text');
            const btnLoading = btn.querySelector('.btn-loading');

            btn.disabled = true;
            btnText.classList.add('d-none');
            btnLoading.classList.remove('d-none');
        });

        // Store auth token if available
        @if (TempData["AuthToken"] != null)
            {
                <text>
                    localStorage.setItem('authToken', '@TempData["AuthToken"]');
                    localStorage.setItem('userName', '@TempData["UserName"]');
                </text>
        }
    </script>
}